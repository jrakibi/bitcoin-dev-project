/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/RwmF4Kiyal6
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Prata } from 'next/font/google'

prata({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenu, DropdownMenuRadioItem, DropdownMenuRadioGroup } from "@/components/ui/dropdown-menu"
import Link from "next/link"
import React from "react"
import { Checkbox } from "./ui/checkbox"
import { Button } from "./ui/button"
import Summary from "./glossary/summary"
import { formatDate } from "pliny/utils/formatDate"
import siteMetadata from "@/data/siteMetadata"
import { GlossaryBanner } from "./glossary-banner"
import { GlossartBanner2 } from "./glossart-banner2"

export default function ListTopic({ displayPosts }: any) {
  return (
    <>
      {/* <GlossaryBanner/> */}
      <main className="container mx-auto px-4 md:px-6 py-12 md:py-16 lg:py-20">
        <div className="grid grid-cols-3 sm:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10 lg:gap-12">
          {displayPosts.map((post: any) => {
            const { path, date, title, summary, tags, thumbnail } = post
            return (
              <>
                <div className="bg-white dark:bg-gray-950 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
                  <Link href="#">
                    <img
                      alt="Blog Post 2"
                      className="w-full h-48 object-cover"
                      height={400}
                      src={thumbnail || "/placeholder.svg"}
                      style={{
                        aspectRatio: "600/400",
                        objectFit: "cover",
                       }}
                      width={600}
                    />
                  </Link>
                  <div className="p-4 md:p-6">
                    <Link href={`/${path}`}>
                      <h2 className="text-xl md:text-2xl font-bold tracking-tight mb-2">
                        {title}
                      </h2>
                    </Link>
                    <p className="text-gray-500 dark:text-gray-400 mb-4">
                      {summary}
                    </p>
                    <div className="flex items-center text-sm text-gray-500 dark:text-gray-400 space-x-4">
                      <div>
                        <UserIcon className="w-4 h-4 mr-1 inline" />
                        Jane Smith
                      </div>
                      <div>
                        <CalendarIcon className="w-4 h-4 mr-1 inline" />
                        {formatDate(date, siteMetadata.locale)}
                      </div>
                      <div>
                        <ClockIcon className="w-4 h-4 mr-1 inline" />
                        8 min read
                      </div>
                    </div>
                  </div>
                </div>
              </>
            )
          })}
        </div>
      </main>
    </>
  )
}

function CalendarIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M8 2v4" />
      <path d="M16 2v4" />
      <rect width="18" height="18" x="3" y="4" rx="2" />
      <path d="M3 10h18" />
    </svg>
  )
}


function ClockIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <polyline points="12 6 12 12 16 14" />
    </svg>
  )
}


function FilterIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" />
    </svg>
  )
}


function ListOrderedIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="10" x2="21" y1="6" y2="6" />
      <line x1="10" x2="21" y1="12" y2="12" />
      <line x1="10" x2="21" y1="18" y2="18" />
      <path d="M4 6h1v4" />
      <path d="M4 10h2" />
      <path d="M6 18H4c0-1 2-2 2-3s-1-1.5-2-1" />
    </svg>
  )
}


function UserIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  )
}
